spring.application.name=payrollmicroservice
server.port=8677
eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
# Database Configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://database:3306/payroll?sessionVariables=sql_mode=''
spring.jpa.hibernate.ddl-auto=update

spring.datasource.username=root
spring.datasource.password=my_password
spring.jackson.serialization.fail-on-empty-beans=false

# Kafka consumer configuration

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=payroll-group

# Deserializer for key
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Deserializer for value
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.deserializer.value.delegate.value.class=com.ghada.payrollProject.payroll.employeeDto.employee
spring.kafka.consumer.properties.spring.deserializer.value.delegate.remove-type-headers=false
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=com.ghada.payrollProject.payroll.kafka.CustomEmployeeDeserializer



# Kafka producer settings
spring.kafka.producer.bootstrap-servers=localhost:9092  # Kafka broker address
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer 
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer  

# //spring.kafka.producer.properties.spring.serializer.value.delegate.value.class=com.ghada.payrollProject.payroll.dto.paymentevent
